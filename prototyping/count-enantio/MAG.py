import numpy as np

class MoleAsGraph:
    def __init__(self, name, edge_layout, equi_sites, elements_at_index, geometry):
        self.name = name
        self.edge_layout = np.array(edge_layout, dtype=object) #edge_layout = [[site_index, connected site index (singular!!!)], [...,...], [...,...]]
        self.equi_sites = np.array(equi_sites, dtype=object) # equi_sites = [[equivalent sites of type 1],[equivalent sites of type 2],[...]]
        self.elements_at_index = np.array(elements_at_index, dtype=object) #Which element is at which index number
        self.geometry = geometry #The usual xyz representation
        self.number_atoms = len(np.unique(self.edge_layout))
        self.max_index = np.amax(self.edge_layout)
        if self.number_atoms != self.max_index+1:
            print("Number of atoms does not match naming of nodes: enumerate the nodes with integers without omissions!")
    def site(self,site_number):
        if site_number >= self.number_atoms:
            raise ValueError("Cannot return site with index "+str(site_number)+". Molecule only has "+str(self.number_atoms)+" atoms.")
        else:
            return self.elements_at_index(site_number)
    def equi_sites(self):
        print('Under construction')
    def close_equi_sites(self):
        print('Under construction')

anthracene = MoleAsGraph('Anthracene',
                        [[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,6],[6,7],[7,8],[8,9],[9,5],[7,10],[10,11],[11,12],[12,13],[13,8]],
                        [[6,9],[0,5,7,8],[1,4,10,13],[2,3,11,12]],
                        ['C','C','C','C','C','C','C','C','C','C','C','C','C','C'],
                        [['C', (0,0,0.5)], ['C', (0,0.8660254037844386467637231707,1)], ['C', (0,2*0.8660254037844386467637231707,0.5)],
                        ['C', (0,2*0.8660254037844386467637231707,-0.5)], ['C', (0,0.8660254037844386467637231707,-1)], ['C', (0,0,-0.5)],
                        ['C', (0,-0.8660254037844386467637231707,1)], ['C', (0,-2*0.8660254037844386467637231707,0.5)], ['C', (0,-2*0.8660254037844386467637231707, -0.5)], ['C', (0,-0.8660254037844386467637231707,-1)],
                        ['C', (0,-3*0.8660254037844386467637231707,1)], ['C', (0,-4*0.8660254037844386467637231707,0.5)], ['C', (0,-4*0.8660254037844386467637231707, -0.5)], ['C', (0,-3*0.8660254037844386467637231707,-1)]])
benzene = MoleAsGraph(  'Benzene',
                        [[0,1],[1,2],[2,3],[3,4],[4,5],[0,5]],
                        [[0,1,2,3,4,5]],
                        ['C','C','C','C','C','C'],
                        [['C', (0,0,1)], ['C', (0,0.8660254037844386467637231707,0.5)], ['C', (0,0.8660254037844386467637231707,-0.5)],
                        ['C', (0,0,-1)], ['C', (0,-0.8660254037844386467637231707,-0.5)], ['C', (0,-0.8660254037844386467637231707,0.5)]])
isochrysene = MoleAsGraph(  'Isochrysene',
                            [[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,6],[6,7],[7,8],[8,9],[9,5],[8,10],[10,11],[11,12],[12,13],[13,9],[6,14],[14,15],[15,16],[16,17],[17,7]],
                            [[1,4,10,13,14,17],[0,5,6,7,8,9],[2,3,11,12,15,16]],
                            ['C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C'],
                            [['C', (0,1,0.8660254037844386467637231707)], ['C', (0,2,0.8660254037844386467637231707)], ['C', (0,2.5,0)],
                            ['C', (0,2,-0.8660254037844386467637231707)], ['C', (0,1,-0.8660254037844386467637231707)], ['C', (0,0.5,0)],
                            ['C', (0,0.5,2*0.8660254037844386467637231707)], ['C', (0,-0.5,2*0.8660254037844386467637231707)], ['C', (0,-1,0.8660254037844386467637231707)], ['C', (0,-0.5,0)],
                            ['C', (0,-2,0.8660254037844386467637231707)], ['C', (0,-2.5,0)], ['C', (0,-2,-0.8660254037844386467637231707)], ['C', (0,-1,-0.8660254037844386467637231707)],
                            ['C', (0,1,3*0.8660254037844386467637231707)], ['C', (0,0.5,4*0.8660254037844386467637231707)], ['C', (0,-0.5,4*0.8660254037844386467637231707)], ['C', (0,-1,3*0.8660254037844386467637231707)]])
naphthalene = MoleAsGraph(  'Naphthalene',
                            [[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,6],[6,7],[7,8],[8,9],[9,5]],
                            [[0,5],[2,3,7,8],[1,4,6,9]],
                            ['C','C','C','C','C','C','C','C','C','C'],
                            [['C', (0,0,0.5)], ['C', (0,0.8660254037844386467637231707,1)], ['C', (0,2*0.8660254037844386467637231707,0.5)],
                            ['C', (0,2*0.8660254037844386467637231707,-0.5)], ['C', (0,0.8660254037844386467637231707,-1)], ['C', (0,0,-0.5)],
                            ['C', (0,-0.8660254037844386467637231707,1)], ['C', (0,-2*0.8660254037844386467637231707,0.5)], ['C', (0,-2*0.8660254037844386467637231707, -0.5)], ['C', (0,-0.8660254037844386467637231707,-1)]])
phenanthrene = MoleAsGraph( 'Phenanthrene',
                            [[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,6],[6,7],[7,8],[8,9],[9,5],[8,10],[10,11],[11,12],[12,13],[13,9]],
                            [[1,10],[2,11],[3,12],[4,13],[5,9],[0,8],[6,7]],
                            ['C','C','C','C','C','C','C','C','C','C','C','C','C','C'],
                            [['C', (0,1,0.8660254037844386467637231707)], ['C', (0,2,0.8660254037844386467637231707)], ['C', (0,2.5,0)],
                            ['C', (0,2,-0.8660254037844386467637231707)], ['C', (0,1,-0.8660254037844386467637231707)], ['C', (0,0.5,0)],
                            ['C', (0,0.5,2*0.8660254037844386467637231707)], ['C', (0,-0.5,2*0.8660254037844386467637231707)], ['C', (0,-1,0.8660254037844386467637231707)], ['C', (0,-0.5,0)],
                            ['C', (0,-2,0.8660254037844386467637231707)], ['C', (0,-2.5,0)], ['C', (0,-2,-0.8660254037844386467637231707)], ['C', (0,-1,-0.8660254037844386467637231707)]])
